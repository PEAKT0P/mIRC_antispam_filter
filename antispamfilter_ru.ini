; File paths
alias -l getChannelFile { return $shortfn($mircdir) $+ texts\antispam_chan.txt }
alias -l getServerFile { return $shortfn($mircdir) $+ texts\antispam_server.txt }

; File handling functions
alias -l loadChannels {
  if ($isfile($getChannelFile)) {
    var %x = 1
    while (%x <= $lines($getChannelFile)) {
      var %chan = $read($getChannelFile, %x)
      if (%chan) { hadd -m antispam_channels %chan 1 }
      inc %x
    }
  }
}

alias -l loadServers {
  if ($isfile($getServerFile)) {
    var %x = 1
    while (%x <= $lines($getServerFile)) {
      var %server = $read($getServerFile, %x)
      if (%server) { hadd -m antispam_servers %server 1 }
      inc %x
    }
  }
}

alias -l saveChannel {
  var %chan = $1
  if (%chan) {
    write $getChannelFile %chan
  }
}

alias -l saveServer {
  var %server = $1
  if (%server) {
    write $getServerFile %server
  }
}

alias -l deleteChannel {
  var %chan = $1
  if (%chan) {
    write -dw" $+ %chan $+ " $getChannelFile
  }
}

alias -l deleteServer {
  var %server = $1
  if (%server) {
    write -dw" $+ %server $+ " $getServerFile
  }
}

; GUI Menu creation
menu channel {
  $iif($group(#antispam).status == on, ✓) Антиспам
  .Настройки: {
    dialog -m antispam_settings antispam_settings
  }
  .Включить: { 
    .enable #antispam
    echo -a [Антиспам] Скрипт включен
  }
  .Выключить: {
    .disable #antispam 
    echo -a [Антиспам] Скрипт выключен
  }
}

; Settings dialog
dialog antispam_settings {
  title "Настройки Антиспама"
  size -1 -1 300 450

  text "Защищаемые каналы:", 1, 5 5 290 20
  list 2, 5 25 290 150, vsbar

  button "Добавить", 3, 5 180 145 25
  button "Удалить", 4, 150 180 145 25

  text "Разрешенные серверы:", 5, 5 210 290 20
  list 6, 5 230 290 150, vsbar

  button "Добавить сервер", 7, 5 385 145 25
  button "Удалить сервер", 8, 150 385 145 25

  check "Включить Антиспам", 9, 5 420 290 25
}

; Dialog events
on *:DIALOG:antispam_settings:init:*:{
  if ($group(#antispam).status == on) { did -c $dname 9 }

  ; Load channels
  if ($isfile($getChannelFile)) {
    var %x = 1
    while (%x <= $lines($getChannelFile)) {
      var %chan = $read($getChannelFile, %x)
      if (%chan) { did -a $dname 2 %chan }
      inc %x
    }
  }

  ; Load servers
  if ($isfile($getServerFile)) {
    var %x = 1
    while (%x <= $lines($getServerFile)) {
      var %server = $read($getServerFile, %x)
      if (%server) { did -a $dname 6 %server }
      inc %x
    }
  }
}

on *:DIALOG:antispam_settings:sclick:3:{
  var %chan = $?="Введите название канала (#channel):"
  if ($left(%chan, 1) !== #) { %chan = # $+ %chan }
  if (%chan) {
    did -a $dname 2 %chan
    hadd -m antispam_channels %chan 1
    saveChannel %chan
  }
}

on *:DIALOG:antispam_settings:sclick:4:{
  if ($did(2).sel) {
    var %chan = $did(2).seltext
    hdel antispam_channels %chan
    deleteChannel %chan
    did -d $dname 2 $did(2).sel
  }
}

on *:DIALOG:antispam_settings:sclick:7:{
  var %server = $?="Введите адрес сервера:"
  if (%server) {
    did -a $dname 6 %server
    hadd -m antispam_servers %server 1
    saveServer %server
  }
}

on *:DIALOG:antispam_settings:sclick:8:{
  if ($did(6).sel) {
    var %server = $did(6).seltext
    hdel antispam_servers %server
    deleteServer %server
    did -d $dname 6 $did(6).sel
  }
}

on *:DIALOG:antispam_settings:sclick:9:{
  if ($did(9).state) { .enable #antispam }
  else { .disable #antispam }
}

; Main antispam functionality
#antispam on
on *:TEXT:*:#:{
  ; Check if channel is protected
  if (!$hget(antispam_channels, $chan)) { return }

  ; Check if server is allowed
  if (!$hget(antispam_servers, $server)) { return }

  ; Флаг для определения спама
  var %isSpam = $false
  var %text = $1-

  ; Базовые паттерны спама
  if ($regex(%text, /([.*'*._\/:|\\-]{5,})|(\s{5,})|(\birc\.\w+\.\w+\b)|(#\w{5,})|(\.*''\.*)|(\.''\.)/i)) { 
    %isSpam = $true 
  }

  ; Повторяющиеся символы
  if ($regex(%text, /(.)\1{4,}/i)) { 
    %isSpam = $true 
  }

  ; URL спам
  if ($regex(%text, /(https?:\/\/|www\.)[^\s]{10,}/i)) { 
    %isSpam = $true 
  }

  ; Массовые упоминания
  if ($regex(%text, /(@\w+\s*){3,}/)) { 
    %isSpam = $true 
  }

  ; КАПС
  if ($regex(%text, /[A-Z\s]{20,}/)) { 
    %isSpam = $true 
  }

  ; Числовой спам
  if ($regex(%text, /\d{15,}/)) { 
    %isSpam = $true 
  }

  ; Смайлы
  if ($regex(%text, /(:|;)-?[\(\)\/\[\]]{1,}/)) { 
    %isSpam = $true 
  }

  ; Ключевые слова
  if ($regex(%text, /\b(free\s*(coins?|points?)|verify|winner|prize)\b/i)) { 
    %isSpam = $true 
  }

  ; Если обнаружен спам
  if (%isSpam) {
    if ($nick !isop $chan) {
      var %host = $gettok($address($nick, 5), 2, 64)
      mode $chan +b *!*@ $+ %host
      kick $chan $nick Спам запрещён! Автоматический бан.
      echo -a [Антиспам] Забанен пользователь $nick ( $+ $address($nick, 5) $+ ) на канале $chan
    }
    else {
      msg $chan Не удалось кикнуть $nick - пользователь защищён!
    }
    haltdef
  }
}
#antispam end

; Initialize on script load
on *:LOAD:{
  ; Create hashtables
  hmake antispam_channels 10
  hmake antispam_servers 10

  ; Create directories if they don't exist
  mkdir " $+ $shortfn($mircdir) $+ texts"

  ; Load saved data
  loadChannels
  loadServers
}

; Cleanup on unload
on *:UNLOAD:{
  hfree antispam_channels
  hfree antispam_servers
}
